apiVersion: apps/v1
kind: Deployment
metadata:
  name: saleor-worker
spec:
  replicas: 2
  selector:
    matchLabels:
      app: saleor-worker
  template:
    metadata:
      labels:
        app: saleor-worker
      annotations:
        instrumentation.opentelemetry.io/inject-python: "worker-instrumentation" 
    spec:
      restartPolicy: Always
      initContainers:
      - name: wait-for-saleor-setup
        image: k3d-registry.higiliquidos.svc.cluster.local:12345/kubectl:1.32.3  
        command: ['sh', '-c', 
          'until kubectl get job saleor-setup -n higiliquidos -o jsonpath="{.status.conditions[?(@.type==\"Complete\")].status}" | grep -q True; do echo waiting for saleor-setup job; sleep 5; done;']
      containers:
      - name: saleor-worker
        image: k3d-registry.higiliquidos.svc.cluster.local:12345/saleor
        imagePullPolicy: Always
        command:
          - celery
        args:
          - --app=saleor.celeryconf:app
          - worker
          - -E
          - --max-tasks-per-child=10
          - --concurrency=4
          - --max-memory-per-child=524288
          - --loglevel=info
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1024Mi"
            cpu: "500m"
        envFrom:
          - configMapRef:
              name: saleor-config
          - secretRef:
              name: saleor-secrets
          - secretRef:
              name: saleor-key

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: saleor-beat
spec:
  replicas: 1  
  selector:
    matchLabels:
      app: saleor-beat
  template:
    metadata:
      labels:
        app: saleor-beat
      annotations:
        instrumentation.opentelemetry.io/inject-python: "worker-instrumentation" 
    spec:
      restartPolicy: Always
      initContainers:
      - name: wait-for-saleor-setup
        image: k3d-registry.higiliquidos.svc.cluster.local:12345/kubectl:1.32.3  
        command: ['sh', '-c', 
          'until kubectl get job saleor-setup -n higiliquidos -o jsonpath="{.status.conditions[?(@.type==\"Complete\")].status}" | grep -q True; do echo waiting for saleor-setup job; sleep 5; done;']
      containers:
      - name: saleor-beat
        image: k3d-registry.higiliquidos.svc.cluster.local:12345/saleor
        imagePullPolicy: Always
        command:
          - celery
        args: 
          - --app=saleor.celeryconf:app
          - beat
          - --scheduler=saleor.schedulers.schedulers.DatabaseScheduler
          - --loglevel=info
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1024Mi"
            cpu: "500m"
        envFrom:
          - configMapRef:
              name: saleor-config
          - secretRef:
              name: saleor-secrets
          - secretRef:
              name: saleor-key

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: job-reader
rules:
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: job-reader-binding
subjects:
- kind: ServiceAccount
  name: default
roleRef:
  kind: Role
  name: job-reader
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: saleor-flower
spec:
  replicas: 1  
  selector:
    matchLabels:
      app: saleor-flower
  template:
    metadata:
      labels:
        app: saleor-flower
    spec:
      restartPolicy: Always
      initContainers:
      - name: wait-for-saleor-setup
        image: k3d-registry.higiliquidos.svc.cluster.local:12345/kubectl:1.32.3  
        command: ['sh', '-c', 
          'until kubectl get job saleor-setup -n higiliquidos -o jsonpath="{.status.conditions[?(@.type==\"Complete\")].status}" | grep -q True; do echo waiting for saleor-setup job; sleep 5; done;']
      containers:
      - name: saleor-flower
        image: k3d-registry.higiliquidos.svc.cluster.local:12345/saleor
        imagePullPolicy: Always
        command:
          - celery
        args: 
          - --app=saleor.celeryconf:app
          - flower
          - --enable_events
        ports:
        - containerPort: 5555
          name: flower
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1024Mi"
            cpu: "500m"
        envFrom:
          - configMapRef:
              name: saleor-config
          - secretRef:
              name: saleor-secrets
          - secretRef:
              name: saleor-key
---

apiVersion: v1
kind: Service
metadata:
  name: saleor-flower
  labels:
    app: saleor-flower
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "5555"
    prometheus.io/path: "/metrics"
spec:
  ports:
  - port: 5555
    targetPort: 5555
    name: flower
  selector:
    app: saleor-flower