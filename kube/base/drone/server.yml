apiVersion: apps/v1
kind: Deployment
metadata:
  name: drone-server
  labels:
    app: drone-server
spec:
  selector:
    matchLabels:
      app: drone-server
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: drone-server
    spec:
      containers:
      - name: drone-server
        image: drone/drone:2.26.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        - containerPort: 443
        env:
        - name: DRONE_USER_CREATE 
          valueFrom:
            secretKeyRef:
              name: drone-server-secret
              key: DRONE_USER_CREATE
        - name: DRONE_DATABASE_DRIVER
          value: postgres
        - name: DRONE_DATABASE_DATASOURCE 
          valueFrom:
            secretKeyRef:
              name: drone-server-secret
              key: DRONE_DATABASE_DATASOURCE
        - name: DRONE_SERVER_PROTO
          value: http
        - name: DRONE_SERVER_HOST 
          valueFrom:
            secretKeyRef:
              name: drone-server-secret
              key: DRONE_SERVER_HOST
        - name: DRONE_GITHUB_CLIENT_ID 
          valueFrom:
            secretKeyRef:
              name: drone-server-secret
              key: DRONE_GITHUB_CLIENT_ID
        - name: DRONE_GITHUB_CLIENT_SECRET 
          valueFrom:
            secretKeyRef:
              name: drone-server-secret
              key: DRONE_GITHUB_CLIENT_SECRET
        - name: DRONE_RPC_SECRET 
          valueFrom:
            secretKeyRef:
              name: drone-server-secret
              key: DRONE_RPC_SECRET
---
apiVersion: v1
kind: Service
metadata:
  name: droneserver
  labels:
    app: drone-server
spec:
  type: ClusterIP
  selector:
    app: drone-server
  ports:
    - protocol: TCP
      name: http
      port: 80
      targetPort: 80
    - protocol: TCP
      name: https
      port: 443
      targetPort: 443
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: drone-server
  annotations:
    kubernetes.io/ingress.class: "traefik"
    traefik.ingress.kubernetes.io/frontend-entry-points: http,https
    traefik.ingress.kubernetes.io/redirect-entry-point: https
    traefik.ingress.kubernetes.io/redirect-permanent: "true"
spec:
  rules:
  - host: drone.higiliquidos.deti.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: droneserver
            port:
              number: 80